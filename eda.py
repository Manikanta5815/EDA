# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WLmgfp_TJsrRiWyLdz4-xUHqUKucNmnw
"""

import pandas as pd
import matplotlib.pyplot as plt
import pylab
from pandas import DataFrame
import statistics
import scipy.stats

from sklearn.model_selection import train_test_split
df=pd.read_csv("eda.txt", sep=" ", header=None)
df1=df.drop(columns=[0])


data1=df[1].to_list()

data2=df[2].to_list()
from scipy.stats import pearsonr

corr,_=pearsonr(data1,data2)
print(corr)
plt.scatter(data1,data2)
plt.xlabel("X1")
plt.ylabel("X2")

sse = {}
import math
from sklearn.cluster import KMeans
for k in range(1, 10):
    kmeans = KMeans(n_clusters=k, max_iter=100000).fit(df1)
    sse[k] = (kmeans.inertia_)

plt.plot(*zip(*sorted(sse.items())))

from sklearn.cluster import AgglomerativeClustering
cluster = AgglomerativeClustering(n_clusters=2, affinity='euclidean', linkage='ward')  
cluster.fit_predict(df1)
plt.figure(figsize=(10, 7))  
plt.scatter(df1[1], df[2], c=cluster.labels_)

from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=2)
kmeans.fit(df1)
plt.figure(figsize=(10, 7))  
plt.scatter(df1[1], df1[2], cmap='viridis',c=kmeans.labels_.astype(float),alpha=1)
centers = kmeans.cluster_centers_
plt.scatter(centers[:, 0], centers[:, 1],s=100)

from sklearn.metrics import silhouette_score

sil = {}

for k in range(2, 10):
  kmeans = KMeans(n_clusters = k).fit(df1)
  labels = kmeans.labels_
  sil[k]=(silhouette_score(df1, labels, metric = 'euclidean'))
plt.plot(*zip(*sorted(sil.items())))